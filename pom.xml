<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.impactupgrade</groupId>
  <artifactId>hub-common</artifactId>
  <version>2.2.0-SNAPSHOT</version>

  <properties>
    <version.cxf>3.3.7</version.cxf>
    <version.guava>29.0-jre</version.guava>
    <version.jersey>2.30</version.jersey>
    <version.jetty>9.4.30.v20200611</version.jetty>
    <version.log4j>2.13.0</version.log4j>
    <version.mail>1.6.2</version.mail>
    <version.spring>4.1.0.RELEASE</version.spring>
    <version.stripe>20.20.0</version.stripe>
    <version.twilio>7.42.0</version.twilio>

    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
  </properties>

  <dependencies>
    <!-- JAXWS for Java 11 -->
    <dependency>
      <groupId>com.sun.xml.ws</groupId>
      <artifactId>jaxws-rt</artifactId>
      <version>2.3.1</version>
      <type>pom</type>
    </dependency>
    <dependency>
      <groupId>com.sun.xml.ws</groupId>
      <artifactId>rt</artifactId>
      <version>2.3.1</version>
    </dependency>

    <!-- Jetty provides the underlying, embedded web server. -->
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-server</artifactId>
      <version>${version.jetty}</version>
    </dependency>
    <dependency>
      <groupId>org.eclipse.jetty</groupId>
      <artifactId>jetty-servlet</artifactId>
      <version>${version.jetty}</version>
    </dependency>

    <!-- Jersey provides the API/REST server bits -->
    <dependency>
      <groupId>org.glassfish.jersey.core</groupId>
      <artifactId>jersey-server</artifactId>
      <version>${version.jersey}</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.containers</groupId>
      <artifactId>jersey-container-servlet-core</artifactId>
      <version>${version.jersey}</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.media</groupId>
      <artifactId>jersey-media-json-jackson</artifactId>
      <version>${version.jersey}</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.media</groupId>
      <artifactId>jersey-media-multipart</artifactId>
      <version>${version.jersey}</version>
    </dependency>
    <dependency>
      <groupId>org.glassfish.jersey.inject</groupId>
      <artifactId>jersey-hk2</artifactId>
      <version>${version.jersey}</version>
    </dependency>
    <!-- Also using Jersey as the HTTP client. -->
    <dependency>
      <groupId>org.glassfish.jersey.core</groupId>
      <artifactId>jersey-client</artifactId>
      <version>${version.jersey}</version>
    </dependency>

    <!-- Using CXF to handle the SOAP server bits -->
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-frontend-jaxws</artifactId>
      <version>${version.cxf}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.cxf</groupId>
      <artifactId>cxf-rt-transports-http</artifactId>
      <version>${version.cxf}</version>
    </dependency>
    <!-- used by CXF -->
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
      <version>${version.spring}</version>
    </dependency>

    <!-- 3rd party SDKs -->
    <dependency>
      <groupId>com.impactupgrade.integration</groupId>
      <artifactId>salesforce-java-tools</artifactId>
      <version>0.2.6.Final</version>
    </dependency>
    <dependency>
      <groupId>com.force.api</groupId>
      <artifactId>force-wsc</artifactId>
      <version>48.1.0</version>
    </dependency>
    <dependency>
      <groupId>com.stripe</groupId>
      <artifactId>stripe-java</artifactId>
      <version>${version.stripe}</version>
    </dependency>
    <!-- Need GSON to unmarshall Stripe events, but transitive dep is runtime scope :( -->
    <dependency>
      <groupId>com.google.code.gson</groupId>
      <artifactId>gson</artifactId>
      <version>2.8.6</version>
    </dependency>
    <dependency>
      <groupId>com.impactupgrade.integration</groupId>
      <artifactId>paymentspring-java-client</artifactId>
      <version>1.0.5.Final</version>
    </dependency>
    <dependency>
      <groupId>com.impactupgrade.integration</groupId>
      <artifactId>hubspot-java-client</artifactId>
      <version>1.0.5.Final</version>
    </dependency>
    <dependency>
      <groupId>com.twilio.sdk</groupId>
      <artifactId>twilio</artifactId>
      <version>${version.twilio}</version>
    </dependency>

    <!-- email -->
    <dependency>
      <groupId>com.sun.mail</groupId>
      <artifactId>javax.mail</artifactId>
      <version>${version.mail}</version>
    </dependency>

    <!-- misc -->
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>${version.guava}</version>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>2.6</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-csv</artifactId>
      <version>1.8</version>
    </dependency>
    <!-- country code <-> country name conversions -->
    <dependency>
      <groupId>com.neovisionaries</groupId>
      <artifactId>nv-i18n</artifactId>
      <version>1.27</version>
    </dependency>
    <!-- csv lib -->
    <dependency>
      <groupId>com.fasterxml.jackson.dataformat</groupId>
      <artifactId>jackson-dataformat-csv</artifactId>
      <!-- TODO: does this conflict with anything Jersey is providing? -->
      <version>2.8.8</version>
    </dependency>

    <!-- jruby (making use of a ruby script for SFDC exports -->
    <dependency>
      <groupId>org.jruby</groupId>
      <artifactId>jruby</artifactId>
      <version>9.2.11.1</version>
    </dependency>

    <!-- for storing any file backups -->
    <dependency>
      <groupId>com.backblaze.b2</groupId>
      <artifactId>b2-sdk-core</artifactId>
      <version>3.1.0</version>
    </dependency>
    <dependency>
      <groupId>com.backblaze.b2</groupId>
      <artifactId>b2-sdk-httpclient</artifactId>
      <version>3.1.0</version>
    </dependency>

    <!-- logging -->
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
      <version>${version.log4j}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <version>${version.log4j}</version>
      <scope>runtime</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-slf4j-impl</artifactId>
      <version>${version.log4j}</version>
      <scope>runtime</scope>
    </dependency>
  </dependencies>

  <build>
    <defaultGoal>install</defaultGoal>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.8.1</version>
        <configuration>
          <source>11</source>
          <target>11</target>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.1.0</version>
        <configuration>
          <encoding>UTF-8</encoding>
        </configuration>
      </plugin>

      <!-- required by Heroku, since the Procfile adds target/dependency/* to the classpath -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>3.0.1</version>
        <executions>
          <execution>
            <id>copy-dependencies</id>
            <phase>package</phase>
            <goals><goal>copy-dependencies</goal></goals>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

  <!--
      Using https://gitlab.com/impact-upgrade/maven-repo as a private repo. Assumes you have the following in your ~/.m2/settings.xml:

      <server>
        <id>gitlab-maven</id>
        <configuration>
          <httpHeaders>
            <property>
              <name>Private-Token</name>
              <value>YOUR TOKEN</value>
            </property>
          </httpHeaders>
        </configuration>
      </server>

      Create your own token following https://docs.gitlab.com/ee/user/profile/personal_access_tokens.html#creating-a-personal-access-token
  -->
  <repositories>
    <repository>
      <id>gitlab-maven</id>
      <url>https://gitlab.com/api/v4/projects/20274353/packages/maven</url>
    </repository>
  </repositories>
  <distributionManagement>
    <repository>
      <id>gitlab-maven</id>
      <url>https://gitlab.com/api/v4/projects/20274353/packages/maven</url>
    </repository>
    <snapshotRepository>
      <id>gitlab-maven</id>
      <url>https://gitlab.com/api/v4/projects/20274353/packages/maven</url>
    </snapshotRepository>
  </distributionManagement>
</project>